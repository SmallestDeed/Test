

索引是为了加速对数据库表查询的一种数据结构
磁盘级索引，数据存储在磁盘块
索引的数据结构：b+树和hash表

hash表，没法范围查找，innodb和


二叉树不合适，主键id自增形成了链表

平衡二叉查找树：节点距离最多差1， 为了维护平衡，会旋转
缺点：
1.搜索时磁盘io次数过多（每次都加载磁盘内容加载进内存）
2.节点数据内容太少

多路平衡查找树（b树）

关键字的数量的确定：16K，页‘

字段长度决定路数，决定b树深度
绝对平衡

update是deleted+insert


b+树
数据区全部在叶子节点（扫库扫表能力强）
innodb：主键索引就是集簇索引
辅助索引存储了主键索引的值

innodb：
myisam：


列的离散性，越高越好，离散型可能都不使用索引

最左匹配索引

覆盖索引

select * 少用

索引不是越多越好，索引结构经常变动，影响性能