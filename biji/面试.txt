1面：基础，虚拟机，多线程，mysql索引，hashmap源码
小公司：重经验，重框架，ioc，aop，mvc执行流程，springboot注解，配置啊
消息中间件，发消息的模式，场景，消息队列底层原理（jms）
redis数据结构，redis怎么保持热点数据（），过期策略，
分布式锁，存取都设置过期时间；zookeeper：四个节点+监听（核心）
分布式事务（扯四大特性）：消息队列的中间件解决（一致性）；TXLCN框架开源解决
SpringCloud：核心组件：服务治理，配置中心（和zookeeper的区别，zk集中注册，做分布式注册），熔断器，消息总线，权限管理，声明式客户端
dubbo：
mybatis：底层了解下
git和svn的区别：分布式，集中式的区别；svn记录的是变化，git是记录的完整分支
es：倒排索引，集群搭建，为什么快，项目中怎么使用
linux：查看内存，杀掉进程，启动jar包的命令
mysql的优化：1.explain分析   2.设计表，字段小额简单，字段不为null  3.读写分离（）  4.建立索引，b+树（索引失效的情况）
怎么解决高并发：1.nginx反向代理   2.分布式集群架构  3.数据库分库分表（垂直拆分，水平拆分）
多线程编程：  
分布式文件存储：挂载虚拟硬盘
doctor容器：
hashmap红黑树，红黑树和二叉树区别
hashmap的原理：hash表，（hash算法计算key，赋值和取值）
jdk1.7和1.8的区别：（hashmap的区别）

数据结构：数组，链表，二叉树，堆栈（各种特性，区别）

-------------------------------------------------------------------
随手记的面试题：
java创建对象有哪几种方式？
创建线程有哪几种方式？
线程池submit和excutor的区别？
dubbo的原理？消费者访问过一次提供者，如果注册中心突然挂了那消费者还能不能访问到提供者？（可以，消费者会在本地缓存一份数据）
redis原理，为什么是单线程的（因为redis基于内存，速度够快，性能瓶颈在网络通信，所以不需要多线程）
分布式事务：最终一致性
分布式锁：两种实现方式，基于redis和zk
集合什么时候会扩容，怎么扩？
mysql的索引类型，什么时候用hash索引，什么时候用b+tree
java有哪些排序的数据结构
list，set，map的区别
spring ioc怎么实现的？spring里用了些什么设计模式
什么是耦合，什么是解耦
简述用过的设计模式：单例，工厂，建造者，策略，装饰者，观察者，模板，代理模式（spring aop动态代理--扯出jdk动态代理和cjlib动态代理），发布订阅模式。。。。
集合：集合体系（collection和map），各个实现类的关系，各种实现类的底层原理，区别，
多线程：线程创建的几种方式，线程池的几种类型，callbale和runnable的区别
之前项目做过最有成就感的一项工作（es，高并发，设计模式--渲染和支付用的模板模式，多线程编程--渲染获取任务，刷数据）
io：不知道说什么，nio，bio？（可以记一下io相关的各种类，字节流，字符流）
异常：错误和异常的区别，异常的分类，常见的各种异常（其实不记一下的话还挺难的）
jvm，垃圾回收算法（不太懂，不过问的话我就会扯什么年轻代老年代永久代，大gc小gc。。。）
笔试：
设计模式-----一只蜜蜂一朵花，花开了蜜蜂采蜜，花关了蜜蜂回家，让两者尽量不要耦合（发布订阅模式，就和mq一样）


---------------------------------------------------------------
编程猫面试题：
hashMap，hashtable，concurthashmap的相关扩展问题（有什么区别，线程安全不安全，为什么）
大于6的连续三个整数，其中两个是质数，怎么证明另一个数可以被6整除？？？？
笔试五道：
1.写sql
2.手写单例
。。。
5.很多if{}else{}，怎么优化？？？策略模式。。。


1.服务搭建（看公司项目，看springBoot搭建）
2.看面试题
3.看底层数据结构，各个框架的底层实现，各个组件的底层实现，java各类的底层实现