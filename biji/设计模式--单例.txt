
单例模式要求类能够有返回对象的一个引用（永远都是同一个），并且有个一获得该实例的方法（必须为静态方法，一个叫做getInstance）
单例的实现主要有两个步骤：
1.将该类的构造方法定义为private，这样其他方法就不能通过构造改类的实例获取引用对象
2.在该类中提供一个静态的获取对象方法，如果类持有的引用不为空，就返回改引用；如果类持有的引用为空，就创建该引用的实例并赋值给类持有的引用

懒汉式线程不安全，需要用synchronized修饰getInstance方法，最好是用同步代码块+DoubleCheck
饿汉式线程安全，但是没有实现懒加载，可能浪费内存空间
静态内部类实现，可以实现懒加载，并运用jvm的类加载器实现线程安全